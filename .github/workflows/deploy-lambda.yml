name: Deploy Lambda Function

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod
      function_name:
        description: 'Lambda function name'
        required: true
        default: 'meraki-network-automation'
      memory:
        description: 'Memory size (MB)'
        required: true
        default: '256'
        type: choice
        options:
          - '128'
          - '256'
          - '512'
          - '1024'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          mkdir -p package
          pip install -r requirements.txt -t package/
          
      - name: Package Lambda dependencies
        run: |
          cd package
          zip -r ../lambda-layer.zip .
          cd ..
          zip -r lambda.zip . -x "package/*" "*.git*"
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
          
      - name: Update Lambda Layer
        id: layer_version
        run: |
          LAYER_ARN=$(aws lambda publish-layer-version \
            --layer-name meraki-dependencies \
            --description "Dependencies for Meraki automation" \
            --zip-file fileb://lambda-layer.zip \
            --compatible-runtimes python3.9 \
            --query 'LayerVersionArn' \
            --output text)
          echo "::set-output name=layer_arn::$LAYER_ARN"

      - name: Check if Lambda function exists
        id: check_function
        run: |
          if ! aws lambda get-function --function-name meraki-network-automation &> /dev/null; then
            echo "::set-output name=exists::false"
          else
            echo "::set-output name=exists::true"
          fi
          
      - name: Validate Lambda role ARN
        id: validate_role
        run: |
          if [ -z "${{ secrets.LAMBDA_ROLE_ARN }}" ]; then
            echo "::error::LAMBDA_ROLE_ARN secret is not set"
            exit 1
          fi
          echo "::set-output name=role_arn::${{ secrets.LAMBDA_ROLE_ARN }}"
          
      - name: Create Lambda function
        if: steps.check_function.outputs.exists == 'false'
        env:
          LAMBDA_ROLE: ${{ steps.validate_role.outputs.role_arn }}
          FUNCTION_NAME: ${{ github.event.inputs.function_name || 'meraki-network-automation' }}
          MEMORY_SIZE: ${{ github.event.inputs.memory || '256' }}
          LAYER_ARN: ${{ steps.layer_version.outputs.layer_arn }}
        run: |
          echo "Using IAM Role: $LAMBDA_ROLE"
          echo "Using Layer ARN: $LAYER_ARN"
          aws lambda create-function \
            --function-name "$FUNCTION_NAME" \
            --runtime python3.9 \
            --handler lambda_handler.lambda_handler \
            --role "$LAMBDA_ROLE" \
            --timeout 300 \
            --memory-size "$MEMORY_SIZE" \
            --layers "$LAYER_ARN" \
            --environment "Variables={MERAKI_API_KEY=${{ secrets.MERAKI_API_KEY }},ORGANIZATION_ID=${{ secrets.ORGANIZATION_ID }}}" \
            --zip-file fileb://lambda.zip

      - name: Update Lambda function
        if: steps.check_function.outputs.exists == 'true'
        env:
          LAYER_ARN: ${{ steps.layer_version.outputs.layer_arn }}
          FUNCTION_NAME: ${{ github.event.inputs.function_name || 'meraki-network-automation' }}
        run: |
          aws lambda update-function-code \
            --function-name "$FUNCTION_NAME" \
            --zip-file fileb://lambda.zip
          
          aws lambda update-function-configuration \
            --function-name "$FUNCTION_NAME" \
            --layers "$LAYER_ARN" \
            --environment "Variables={MERAKI_API_KEY=${{ secrets.MERAKI_API_KEY }},ORGANIZATION_ID=${{ secrets.ORGANIZATION_ID }}}"
