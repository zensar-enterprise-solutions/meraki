name: KICS Security Scan

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

# Required permissions for SARIF upload
permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  kics-scan:
    runs-on: ubuntu-latest
    name: KICS Security Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Create results directory
      run: mkdir -p kics-results
    
    - name: Run KICS Scan
      uses: checkmarx/kics-github-action@v1.7.0
      with:
        path: '.'
        output_path: 'kics-results'
        output_formats: 'json,sarif,html'
        fail_on: 'high,medium'
        enable_comments: true
        exclude_paths: '.git,node_modules,*.md,*.txt,tools,kics-results,venv,__pycache__,.pytest_cache'
        platform_type: 'Terraform,CloudFormation,Dockerfile,Ansible,Python'
        cloud_provider: 'aws'
        verbose: true
        ignore_on_exit: 'results'
        include_queries: 'python,secrets,dockerfile,terraform,cloudformation'
        
    - name: List scan results
      if: always()
      run: |
        echo "Contents of kics-results directory:"
        ls -la kics-results/ || echo "kics-results directory not found"
        echo "Looking for results files:"
        find . -name "results.*" -type f || echo "No results files found"
        echo "Checking for any SARIF files:"
        find . -name "*.sarif" -type f || echo "No SARIF files found"
        
    - name: Ensure SARIF file exists
      if: always()
      run: |
        if [ ! -f "kics-results/results.sarif" ]; then
          echo "SARIF file not found, checking for alternative names..."
          # Sometimes KICS creates different file names
          if [ -f "kics-results/results-summary.sarif" ]; then
            cp "kics-results/results-summary.sarif" "kics-results/results.sarif"
            echo "Copied results-summary.sarif to results.sarif"
          elif find kics-results -name "*.sarif" -type f | head -1 | read sarif_file; then
            cp "$sarif_file" "kics-results/results.sarif"
            echo "Copied $sarif_file to results.sarif"
          else
            echo "No SARIF file found to upload"
          fi
        else
          echo "SARIF file exists: kics-results/results.sarif"
        fi
        
    - name: Upload KICS results to GitHub Security tab
      if: always() && hashFiles('kics-results/results.sarif') != ''
      uses: github/codeql-action/upload-sarif@v3
      continue-on-error: true
      with:
        sarif_file: kics-results/results.sarif
        
    - name: Show SARIF upload status
      if: always()
      run: |
        if [ -f "kics-results/results.sarif" ]; then
          echo "SARIF file exists and will be available in artifacts"
          echo "If SARIF upload failed, results are still available in the artifacts section"
        else
          echo "No SARIF file found for upload"
        fi
        
    - name: Archive KICS results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: kics-security-results
        path: kics-results/
        retention-days: 30
        
    - name: Comment PR with results summary
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          try {
            const results = JSON.parse(fs.readFileSync('kics-results/results.json', 'utf8'));
            const summary = `
            ## [SECURITY] KICS Security Scan Results
            
            - **High Severity**: ${results.severity_counters?.HIGH || 0}
            - **Medium Severity**: ${results.severity_counters?.MEDIUM || 0}
            - **Low Severity**: ${results.severity_counters?.LOW || 0}
            - **Info**: ${results.severity_counters?.INFO || 0}
            
            **Total Files Scanned**: ${results.files_scanned || 0}
            **Total Queries Executed**: ${results.queries_total || 0}
            
            ${results.severity_counters?.HIGH > 0 || results.severity_counters?.MEDIUM > 0 ? 
              '[WARNING] **Action Required**: High or Medium severity issues found. Please review the security findings.' : 
              '[SUCCESS] **No critical security issues found**'}
            
            [RESULTS] [View detailed results in Actions artifacts](${context.payload.pull_request.html_url}/checks)
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          } catch (error) {
            console.log('Could not parse KICS results or create comment:', error.message);
          }
        
    - name: Display scan results summary
      if: always()
      run: |
        echo "=========================================="
        echo "KICS Security Scan Results Summary"
        echo "=========================================="
        
        if [ -f "kics-results/results.json" ]; then
          echo "✓ JSON results file found"
          
          # Extract key metrics using basic shell tools
          if command -v jq >/dev/null 2>&1; then
            echo "Files scanned: $(jq -r '.files_scanned // "N/A"' kics-results/results.json)"
            echo "Queries executed: $(jq -r '.queries_total // "N/A"' kics-results/results.json)"
            echo ""
            echo "Severity breakdown:"
            echo "  HIGH:   $(jq -r '.severity_counters.HIGH // 0' kics-results/results.json)"
            echo "  MEDIUM: $(jq -r '.severity_counters.MEDIUM // 0' kics-results/results.json)"
            echo "  LOW:    $(jq -r '.severity_counters.LOW // 0' kics-results/results.json)"
            echo "  INFO:   $(jq -r '.severity_counters.INFO // 0' kics-results/results.json)"
            
            HIGH=$(jq -r '.severity_counters.HIGH // 0' kics-results/results.json)
            MEDIUM=$(jq -r '.severity_counters.MEDIUM // 0' kics-results/results.json)
            
            echo ""
            if [ "$HIGH" -gt 0 ] || [ "$MEDIUM" -gt 0 ]; then
              echo "⚠️  Action required: High or Medium severity issues found"
              echo "   Please review the detailed results in the artifacts"
            else
              echo "✅ No critical security issues found"
            fi
          else
            echo "jq not available, basic file info only:"
            echo "Results file size: $(wc -c < kics-results/results.json) bytes"
          fi
        else
          echo "❌ No JSON results file found"
        fi
        
        echo ""
        echo "Available result files:"
        ls -la kics-results/ 2>/dev/null || echo "No results directory found"
        echo "=========================================="
