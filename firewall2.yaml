AWSTemplateFormatVersion: "2010-09-09"
Description: "Inspection Network Firewall - Fixed Version"
Transform: "AWS::LanguageExtensions"

Parameters:
  InspectionVPC:
    Type: AWS::EC2::VPC::Id
    Description: "VPC ID for inspection firewall deployment"
    ConstraintDescription: "Must be a valid VPC ID"
    
  InspectionFirewallSubneta:
    Type: AWS::EC2::Subnet::Id
    Description: "First firewall subnet in different availability zone"
    ConstraintDescription: "Must be a valid subnet ID in the specified VPC"
    
  InspectionFirewallSubnetb:
    Type: AWS::EC2::Subnet::Id
    Description: "Second firewall subnet in different availability zone" 
    ConstraintDescription: "Must be a valid subnet ID in the specified VPC"
    
  InspectionFirewallSubnetc:
    Type: AWS::EC2::Subnet::Id
    Description: "Third firewall subnet in different availability zone"
    ConstraintDescription: "Must be a valid subnet ID in the specified VPC"

  Environment:
    Type: String
    Default: "Development"
    AllowedValues:
      - "Development"
      - "Staging"
      - "Production"
    Description: "Environment name for resource tagging"

Resources:
  # Network Firewall resource
  NetworkFirewall:
    Type: AWS::NetworkFirewall::Firewall
    Properties:
      DeleteProtection: false
      FirewallName: !Sub "InspectionFirewall-${Environment}"
      FirewallPolicyArn: !GetAtt NetworkFirewallRulesPolicy.FirewallPolicyArn
      VpcId: !Ref InspectionVPC
      SubnetChangeProtection: false
      SubnetMappings:
        - SubnetId: !Ref InspectionFirewallSubneta
        - SubnetId: !Ref InspectionFirewallSubnetb
        - SubnetId: !Ref InspectionFirewallSubnetc
      Tags:
        - Key: Name
          Value: !Sub "InspectionFirewall-${Environment}"
        - Key: Environment
          Value: !Ref Environment

  # Firewall Policy
  NetworkFirewallRulesPolicy:
    Type: AWS::NetworkFirewall::FirewallPolicy
    Properties:
      FirewallPolicyName: !Sub "InspectionPolicy-${Environment}"
      FirewallPolicy:
        StatelessDefaultActions:
          - "aws:forward_to_sfe"
        StatelessFragmentDefaultActions:
          - "aws:forward_to_sfe"
        StatelessRuleGroupReferences:
          - Priority: 10
            ResourceArn: !GetAtt NetworkFirewallStatelessAllowAll.RuleGroupArn
        StatefulEngineOptions:
          RuleOrder: STRICT_ORDER
        StatefulDefaultActions:
          - "aws:drop_strict"
          - "aws:alert_strict"
        StatefulRuleGroupReferences:
          - Priority: 1
            ResourceArn: !GetAtt NetworkFirewallStatefulAllowDomains.RuleGroupArn

  # Enhanced Stateless Rule Group - Allow all protocols
  NetworkFirewallStatelessAllowAll:
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      Capacity: 200
      RuleGroupName: !Sub "allow-all-protocols-${Environment}-${AWS::StackName}"
      Description: "Allow all protocols for comprehensive traffic flow - replace with specific rules in production"
      Type: STATELESS
      RuleGroup:
        RulesSource:
          StatelessRulesAndCustomActions:
            StatelessRules:
              # TCP (Protocol 6)
              - Priority: 1
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 6  # TCP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                    SourcePorts:
                      - FromPort: 1
                        ToPort: 65535
                    DestinationPorts:
                      - FromPort: 1
                        ToPort: 65535
                  Actions:
                    - "aws:pass"
              
              # UDP (Protocol 17)
              - Priority: 2
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 17  # UDP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                    SourcePorts:
                      - FromPort: 1
                        ToPort: 65535
                    DestinationPorts:
                      - FromPort: 1
                        ToPort: 65535
                  Actions:
                    - "aws:pass"
              
              # ICMP (Protocol 1)
              - Priority: 3
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 1  # ICMP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # IGMP (Protocol 2) - Internet Group Management Protocol
              - Priority: 4
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 2  # IGMP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # IPIP (Protocol 4) - IP in IP tunneling
              - Priority: 5
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 4  # IPIP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # GRE (Protocol 47) - Generic Routing Encapsulation
              - Priority: 6
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 47  # GRE
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # ESP (Protocol 50) - Encapsulating Security Payload (IPSec)
              - Priority: 7
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 50  # ESP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # AH (Protocol 51) - Authentication Header (IPSec)
              - Priority: 8
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 51  # AH
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # ICMPv6 (Protocol 58) - Internet Control Message Protocol for IPv6
              - Priority: 9
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 58  # ICMPv6
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # OSPF (Protocol 89) - Open Shortest Path First
              - Priority: 10
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 89  # OSPF
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # VRRP (Protocol 112) - Virtual Router Redundancy Protocol
              - Priority: 11
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 112  # VRRP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                  Actions:
                    - "aws:pass"
              
              # SCTP (Protocol 132) - Stream Control Transmission Protocol
              - Priority: 12
                RuleDefinition:
                  MatchAttributes:
                    Protocols:
                      - 132  # SCTP
                    Sources:
                      - AddressDefinition: 0.0.0.0/0
                    Destinations:
                      - AddressDefinition: 0.0.0.0/0
                    SourcePorts:
                      - FromPort: 1
                        ToPort: 65535
                    DestinationPorts:
                      - FromPort: 1
                        ToPort: 65535
                  Actions:
                    - "aws:pass"
      Tags:
        - Key: Purpose
          Value: "All Protocols Allow - Testing Only"
        - Key: SecurityLevel
          Value: "Low - Production Hardening Required"

  # Fixed Stateful Rule Group
  NetworkFirewallStatefulAllowDomains:
    Type: AWS::NetworkFirewall::RuleGroup
    Properties:
      Capacity: 100
      RuleGroupName: !Sub "allow-domains-${Environment}-${AWS::StackName}"
      Description: "Allow specific domains and protocols"
      Type: STATEFUL
      RuleGroup:
        StatefulRuleOptions:
          RuleOrder: STRICT_ORDER
        RulesSource:
          RulesString: |-
            # Allow HTTP traffic
            alert tcp $HOME_NET any -> $EXTERNAL_NET 80 (msg:"HTTP traffic allowed"; sid:1001; rev:1;)
            pass tcp $HOME_NET any -> $EXTERNAL_NET 80 (msg:"Allow HTTP"; sid:1002; rev:1;)
            
            # Allow HTTPS traffic
            alert tcp $HOME_NET any -> $EXTERNAL_NET 443 (msg:"HTTPS traffic allowed"; sid:1003; rev:1;)
            pass tcp $HOME_NET any -> $EXTERNAL_NET 443 (msg:"Allow HTTPS"; sid:1004; rev:1;)
            
            # Allow DNS
            alert udp $HOME_NET any -> $EXTERNAL_NET 53 (msg:"DNS UDP traffic allowed"; sid:1005; rev:1;)
            pass udp $HOME_NET any -> $EXTERNAL_NET 53 (msg:"Allow DNS UDP"; sid:1006; rev:1;)
            
            alert tcp $HOME_NET any -> $EXTERNAL_NET 53 (msg:"DNS TCP traffic allowed"; sid:1007; rev:1;)
            pass tcp $HOME_NET any -> $EXTERNAL_NET 53 (msg:"Allow DNS TCP"; sid:1008; rev:1;)
            
            # Allow SSH from internal networks
            alert tcp 10.0.0.0/8 any -> 10.0.0.0/8 22 (msg:"Internal SSH traffic allowed"; sid:1009; rev:1;)
            pass tcp 10.0.0.0/8 any -> 10.0.0.0/8 22 (msg:"Allow internal SSH"; sid:1010; rev:1;)
      Tags:
        - Key: Purpose
          Value: "Domain and Protocol Allow Rules"

Outputs:
  NetworkFirewallId:
    Description: "Network Firewall ID"
    Value: !Ref NetworkFirewall
    Export:
      Name: !Sub "${AWS::StackName}-NetworkFirewall-Id"
      
  NetworkFirewallArn:
    Description: "Network Firewall ARN"
    Value: !Ref NetworkFirewall
    Export:
      Name: !Sub "${AWS::StackName}-NetworkFirewall-Arn"
      
  FirewallPolicyArn:
    Description: "Firewall Policy ARN"
    Value: !Ref NetworkFirewallRulesPolicy
    Export:
      Name: !Sub "${AWS::StackName}-FirewallPolicy-Arn"
      
  FirewallEndpoints:
    Description: "Firewall Endpoint IDs for route table configuration"
    Value: !Join
      - ","
      - !GetAtt NetworkFirewall.EndpointIds
    Export:
      Name: !Sub "${AWS::StackName}-Firewall-Endpoints"